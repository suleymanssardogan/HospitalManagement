<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="simpleButton1.ImageOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        xmsDm41/Agm9y+cHhNi3AAAAAElFTkSuQmCC
</value>
  </data>
  <data name="btnPDF.ImageOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>